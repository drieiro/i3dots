#!/bin/sh

# Based on https://github.com/LukeSmithxyz/voidrice/blob/master/.local/bin/statusbar/sb-forecast

# Displays todays precipication chance (â˜”) and daily low (ðŸ¥¶) and high (ðŸŒž).
# Usually intended for the statusbar.

# If we have internet, get a weather report from wttr.in and store it locally.
# You could set up a shell alias to view the full file in a pager in the
# terminal if desired. This function will only be run once a day when needed.
weatherreport="${XDG_DATA_HOME:-$HOME/.local/share}/weatherreport"

# Import $location variable
. ~/.config/weather

# Only get a weather report if there's a Internet connection, otherwise curl will wipe $weatherreport file.
getforecast() { ping -c1 example.org >/dev/null 2>&1 && curl -sf "es.wttr.in/$location" > "$weatherreport" || return 1 ;}

# Some very particular and terse stream manipulation. We get the maximum
# precipitation chance and the daily high and low from the downloaded file and
# display them with coresponding emojis.
showweather() { printf "%s" "$(sed '16q;d' "$weatherreport" |
    grep -wo "[0-9]*%" | sort -rn | sed "s/^/îˆ¹ /g;1q" | tr -d '\n')"
sed '13q;d' "$weatherreport" | grep -o "m\\([-+]\\)*[0-9]\\+" | sed 's/+//g' | sort -n -t 'm' -k 2n | sed -e 1b -e '$!d' | tr '\n|m' ' ' | awk '{print " ï‹œ " $1 "Â°","ïª§ " $2 "Â°"}' ;}

showoutdated() { printf "%s" "ï™š  " "$(sed '16q;d' "$weatherreport" |
    grep -wo "[0-9]*%" | sort -rn | sed "s/^/îˆ¹ /g;1q" | tr -d '\n')"
sed '13q;d' "$weatherreport" | grep -o "m\\([-+]\\)*[0-9]\\+" | sed 's/+//g' | sort -n -t 'm' -k 2n | sed -e 1b -e '$!d' | tr '\n|m' ' ' | awk '{print " ï‹œ " $1 "Â°","ïª§ " $2 "Â°"}' ;}

case $BLOCK_BUTTON in
    1) setsid -f alacritty -e less -Srf "$weatherreport" ;;
    2) getforecast && showweather ;;
    3) notify-send -i "weather" "Informe meteorolÃ³gico" "\n- Haz clic izquierdo para ver la previsiÃ³n completa.
- Haz clic en el medio para actualizar la previsiÃ³n.
îˆ¹ : Probabilidad de lluvia/nieve
ï‹œ : MÃ­nima diaria
ïª§ : MÃ¡xima diaria
ï™š : El reporte estÃ¡ desactualizado" ;;
    6) alacritty -e "$EDITOR" "$0" ;;
esac

# The test if our forcecast is updated to the day. If it isn't download a new
# weather report from wttr.in with the above function.
[ "$(stat -c %y "$weatherreport" 2>/dev/null | cut -d' ' -f1)" = "$(date '+%Y-%m-%d')" ] ||
    if ! getforecast; then
        showoutdated && exit 0
    fi

[ -e "$weatherreport" ] && showweather
